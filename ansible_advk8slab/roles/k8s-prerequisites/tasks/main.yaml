---
- name: Install required packages for the k8slab
  ansible.builtin.apt:
    update_cache: true
    name:
      - vim
      - curl
      - apt-transport-https
      - wget
      - software-properties-common
      - lsb-release
      - ca-certificates
      - socat

- name: Disable swap - This will keep swap disabled until a system reboot
  ansible.builtin.command:
    cmd: swapoff -a
  changed_when: true

- name: Disable swap from /etc/fstab - This will disable the swap permanently
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Load overlay kernel module
  ansible.builtin.command: modprobe overlay
  register: overlay_mod
  changed_when: overlay_mod.rc == 0

- name: Load br_netfilter kernel module
  ansible.builtin.command: modprobe br_netfilter
  register: br_netfilter_mod
  changed_when: br_netfilter_mod.rc == 0

- name: Load kernel modules persistently
  ansible.builtin.blockinfile:
    path: /etc/modules-load.d/kubernetes.conf
    create: true
    mode: "0644"
    block: |
      overlay
      br_netfilter

- name: Update kernel networking to allow necessary traffic
  ansible.builtin.lineinfile:
    path: /etc/sysctl.d/kubernetes.conf
    line: "{{ item }}"
    create: true
    mode: "0644"
  loop:
    - "net.bridge.bridge-nf-call-ip6tables = 1"
    - "net.bridge.bridge-nf-call-iptables  = 1"
    - "net.ipv4.ip_forward                 = 1"

- name: Apply sysctl settings
  ansible.builtin.command:
    cmd: sysctl --system
  register: sysctl_output
  changed_when: sysctl_output.rc == 0

- name: Set the hostname as FQDN
  ansible.builtin.hostname:
    name: "{{ ansible_fqdn }}"

- name: Install containerd
  ansible.builtin.apt:
    update_cache: true
    name: containerd
    state: present

- name: Create /etc/containerd directory
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: '0755'

- name: Add containerd configuration
  ansible.builtin.shell:
    cmd: containerd config default > /etc/containerd/config.toml
  changed_when: false

- name: Configuring Systemd cgroup driver for containerd
  ansible.builtin.lineinfile:
    path: /etc/containerd/config.toml
    regexp: "            SystemdCgroup = false"
    line: "            SystemdCgroup = true"

- name: Enable the containerd service and start service
  ansible.builtin.systemd:
    name: containerd
    state: restarted
    enabled: true
    daemon-reload: true

- name: Create /etc/apt/keyrings directory
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download the public signing key for the Kubernetes package repositories
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      curl -fsSL https://pkgs.k8s.io/core:/stable:/v"{{ kuberepo_ver }}"/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    executable: /bin/bash
  changed_when: false

- name: Add Kubernetes APT repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ kuberepo_ver }}/deb/ /"
    update_cache: true
    state: present
    filename: /etc/apt/sources.list.d/kubernetes

- name: Install kubeadm,kublet and kubectl
  ansible.builtin.apt:
    name:
      - kubeadm={{ kubeadm_ver }}
      - kubelet={{ kubelet_ver }}
      - kubectl={{ kubectl_ver }}
    state: present

- name: Mark kubeadm,kubelet and kubectl as hold
  ansible.builtin.dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop:
    - kubeadm
    - kubelet
    - kubectl
